---
title: "CD_visualizations"
author: "Carson Stacy"
date: "2/23/2021"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


```{r, echo=FALSE, results='hide', message=FALSE}
library(ggplot2)
library(tidyverse, warn.conflicts=F, quietly=T)
```


```{r, echo=FALSE}
alphaCD_pH7 <- read.csv("~/PersonalProjects/cd_data/alphaCD_pH7.csv")
alphaCD_pH4 <- read.csv("~/PersonalProjects/cd_data/alphaCD_pH4.csv")
alphaCD_pH2 <- read.csv("~/PersonalProjects/cd_data/alphaCD_pH2.csv")
```

```{r, echo=FALSE}
#define "control" data
ctl_temp <- 75
ctl_pH <- 7
min_wavelength <- 200
max_wavelength <- 250
```


```{r, echo=FALSE}
#rename wavelength column name:
alphaCD_pH4 <- rename(alphaCD_pH4, WL = ï..WL)
alphaCD_pH2 <- rename(alphaCD_pH2, WL = ï..WL)

#format data for easy plotting
#put data in long from with tidy package
aCD_pH7 <- gather(alphaCD_pH7, Temperature, MolarElipticity, -WL)
aCD_pH4 <- gather(alphaCD_pH4, Temperature, MolarElipticity, -WL)
aCD_pH2 <- gather(alphaCD_pH2, Temperature, MolarElipticity, -WL)

## Old approach to do the same thing:
# melt(alphaCD_pH7, variable.name = "Temperatue", value.name = "MolarElipticity", id.vars = "WL")

# Convert Temperature value to numeric:
aCD_pH7$Temperature <- as.numeric(gsub("\\D+", "", aCD_pH7$Temperature))
aCD_pH4$Temperature <- as.numeric(gsub("\\D+", "", aCD_pH4$Temperature))
aCD_pH2$Temperature <- as.numeric(gsub("\\D+", "", aCD_pH2$Temperature))

# provide new column indicating pH for each dataset:
aCD_pH7$pH <- 7
aCD_pH4$pH <- 4
aCD_pH2$pH <- 2

aCD_all <- rbind(aCD_pH7, aCD_pH4, aCD_pH2)
```


```{r, echo=FALSE}
WSD <- function(control, samples) {
  #find squared difference between y_Ai and y_Bi
  WSD_output <- data.frame()
  for (i in 1:length(samples)) {
    for (j in 3:ncol(samples[[i]])) { #note we start at 3 because col 1 is wavelength and col2 is pH
      SD <- sqrt( 
                sum(
                  (control - samples[[i]][[j]])^2  / length(control)
                  ) 
                )
      WSD <- sqrt( 
                sum( 
                ((abs(control)) / sum(abs(control))) * (control - samples[[i]][[j]])^2
                    ) 
                )
      if (!exists("WSD_output")) {
        WSD_output <- data.frame(colnames(samples[[i]][j]), samples[[i]][[2]][1], WSD, SD)
      } else {
        WSD_output_new <- data.frame(colnames(samples[[i]][j]), samples[[i]][[2]][1], WSD, SD)
        WSD_output <- rbind(WSD_output, WSD_output_new)
      }
    }
  }
 colnames(WSD_output) <- c("Temperature", "pH", "WSD", "SD")
 return(WSD_output)
}
```


```{r, echo=FALSE}


#select control data
control <- aCD_all %>%
  filter(Temperature == ctl_temp & pH == ctl_pH) %>%
  filter(WL >= min_wavelength, WL <= max_wavelength) %>% #choose which range of wavelengths to include in WSD calculation
  arrange(WL) %>%
  pull(MolarElipticity)

samples <- aCD_all %>%
  # filter((Temperature == ctl_temp & pH == ctl_pH) == FALSE) %>%  #this line removes control fropm samples
  filter(WL >= min_wavelength, WL <= max_wavelength) %>% #choose which range of wavelengths to include in WSD calculation
  spread(Temperature, MolarElipticity) %>%
  arrange(pH, WL) %>%
  group_by(pH) %>%
  group_split()

```


```{r, echo=FALSE}
WSD_alpha <- WSD(control = control, samples = samples)
# head(WSD_alpha)


#add column identifying subunit
WSD_alpha$subunit <- "alpha"
#save these data to a file
write.csv(WSD_alpha, file = "Alpha_Weighted_Spectral_Difference_values_02_23_2021.csv", row.names = FALSE)
```



```{r, echo=FALSE}
betaCD_pH7 <- read.csv("~/PersonalProjects/cd_data/betaCD_pH7.csv")
betaCD_pH4 <- read.csv("~/PersonalProjects/cd_data/betaCD_pH4.csv")
betaCD_pH2 <- read.csv("~/PersonalProjects/cd_data/betaCD_pH2.csv")
```

```{r, echo=FALSE, results='hide'}
library(ggplot2)
library(tidyverse)
```


```{r, echo=FALSE}
#rename wavelength column name (formatting issue with excel):
betaCD_pH7 <- rename(betaCD_pH7, WL = ï..WL)
betaCD_pH4 <- rename(betaCD_pH4, WL = ï..WL)
betaCD_pH2 <- rename(betaCD_pH2, WL = ï..WL)

#format data for easy plotting
#put data in long from with tidy package
bCD_pH7 <- gather(betaCD_pH7, Temperature, MolarElipticity, -WL)
bCD_pH4 <- gather(betaCD_pH4, Temperature, MolarElipticity, -WL)
bCD_pH2 <- gather(betaCD_pH2, Temperature, MolarElipticity, -WL)

## Old approach to do the same thing:
# melt(betaCD_pH7, variable.name = "Temperatue", value.name = "MolarElipticity", id.vars = "WL")

# Convert Temperature value to numeric:
bCD_pH7$Temperature <- as.numeric(gsub("\\D+", "", bCD_pH7$Temperature))
bCD_pH4$Temperature <- as.numeric(gsub("\\D+", "", bCD_pH4$Temperature))
bCD_pH2$Temperature <- as.numeric(gsub("\\D+", "", bCD_pH2$Temperature))

# provide new column indicating pH for each dataset:
bCD_pH7$pH <- 7
bCD_pH4$pH <- 4
bCD_pH2$pH <- 2

bCD_all <- rbind(bCD_pH7, bCD_pH4, bCD_pH2)
```





```{r, echo=FALSE}
WSD <- function(control, samples) {
  #find squared difference between y_Ai and y_Bi
  WSD_output <- data.frame()
  for (i in 1:length(samples)) {
    for (j in 3:ncol(samples[[i]])) { #note we start at 3 because col 1 is wavelength and col2 is pH
      SD <- sqrt( 
                sum(
                  (control - samples[[i]][[j]])^2  / length(control)
                  ) 
                )
      WSD <- sqrt( 
                sum( 
                ((abs(control)) / sum(abs(control))) * (control - samples[[i]][[j]])^2
                    ) 
                )
      if (!exists("WSD_output")) {
        WSD_output <- data.frame(colnames(samples[[i]][j]), samples[[i]][[2]][1], WSD, SD)
      } else {
        WSD_output_new <- data.frame(colnames(samples[[i]][j]), samples[[i]][[2]][1], WSD, SD)
        WSD_output <- rbind(WSD_output, WSD_output_new)
      }
    }
  }
 colnames(WSD_output) <- c("Temperature", "pH", "WSD", "SD")
 return(WSD_output)
}
```


```{r, echo=FALSE}
#select control data
control <- bCD_all %>%
  filter(Temperature == ctl_temp & pH == ctl_pH) %>%
  filter(WL >= min_wavelength, WL <= max_wavelength) %>% #choose which range of wavelengths to include in WSD calculation
  arrange(WL) %>%
  pull(MolarElipticity)

samples <- bCD_all %>%
  # filter((Temperature == ctl_temp & pH == ctl_pH) == FALSE) %>%  #this line removes control fropm samples
  filter(WL >= min_wavelength, WL <= max_wavelength) %>% #choose which range of wavelengths to include in WSD calculation
  spread(Temperature, MolarElipticity) %>%
  arrange(pH, WL) %>%
  group_by(pH) %>%
  group_split()

```


```{r, echo=FALSE}
WSD_beta <- WSD(control = control, samples = samples)
# head(WSD_beta)

#add column identifying subunit
WSD_beta$subunit <- "beta"
#save these data to a file
write.csv(WSD_beta, file = "Beta_Weighted_Spectral_Difference_values_02_23_2021.csv", row.names = FALSE)
```










```{r, echo=FALSE}
betacohCD_pH7 <- read.csv("~/PersonalProjects/cd_data/betacohCD_pH7.csv")
betacohCD_pH4 <- read.csv("~/PersonalProjects/cd_data/betacohCD_pH4.csv")
betacohCD_pH2 <- read.csv("~/PersonalProjects/cd_data/betacohCD_pH2.csv")
```



```{r, echo=FALSE}
#rename wavelength column name:
colnames(betacohCD_pH2)[1] <- "WL"
colnames(betacohCD_pH4)[1] <- "WL"
colnames(betacohCD_pH7)[1] <- "WL"
#alternative way:
# betacohCD_pH7 <- rename(betacohCD_pH2, WL = ï..WL)

#format data for easy plotting
#put data in long from with tidy package
bcohCD_pH7 <- gather(betacohCD_pH7, Temperature, MolarElipticity, -WL)
bcohCD_pH4 <- gather(betacohCD_pH4, Temperature, MolarElipticity, -WL)
bcohCD_pH2 <- gather(betacohCD_pH2, Temperature, MolarElipticity, -WL)

## Old approach to do the same thing:
# melt(betacohCD_pH7, variable.name = "Temperatue", value.name = "MolarElipticity", id.vars = "WL")

# Convert Temperature value to numeric:
bcohCD_pH7$Temperature <- as.numeric(gsub("\\D+", "", bcohCD_pH7$Temperature))
bcohCD_pH4$Temperature <- as.numeric(gsub("\\D+", "", bcohCD_pH4$Temperature))
bcohCD_pH2$Temperature <- as.numeric(gsub("\\D+", "", bcohCD_pH2$Temperature))

# provide new column indicating pH for each dataset:
bcohCD_pH7$pH <- 7
bcohCD_pH4$pH <- 4
bcohCD_pH2$pH <- 2

bcohCD_all <- rbind(bcohCD_pH7, bcohCD_pH4, bcohCD_pH2)
```







```{r, echo=FALSE}

#select control data
control <- bcohCD_all %>%
  filter(Temperature == ctl_temp & pH == ctl_pH) %>%
  filter(WL >= min_wavelength, WL <= max_wavelength) %>% #choose which range of wavelengths to include in WSD calculation
  arrange(WL) %>%
  pull(MolarElipticity)

samples <- bcohCD_all %>%
  # filter((Temperature == ctl_temp & pH == ctl_pH) == FALSE) %>%  #this line removes control fropm samples
  filter(WL >= min_wavelength, WL <= max_wavelength) %>% #choose which range of wavelengths to include in WSD calculation
  spread(Temperature, MolarElipticity) %>%
  arrange(pH, WL) %>%
  group_by(pH) %>%
  group_split()

```

```{r, echo=FALSE}
WSD_betacoh <- WSD(control = control, samples = samples)
# head(WSD_betacoh)


#add column identifying subunit
WSD_betacoh$subunit <- "betacoh"
#save these data to a file
write.csv(WSD_betacoh, file = "betacoh_Weighted_Spectral_Difference_values_02_23_2021.csv", row.names = FALSE)
```


































## Comparison of WSD for all subunits

```{r, echo=FALSE}
#combine data for subunits
WSD_alphabetabetacoh <- rbind(WSD_alpha, WSD_beta, WSD_betacoh)

ggplot(data = WSD_alphabetabetacoh, aes(x=Temperature, y=WSD, group= interaction(pH, subunit), color=as.factor(pH), shape=subunit)) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2.5) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP subunits") +
  scale_shape_manual(values = c("triangle", "circle", "square")) +
  xlab("Temperature (°C)")
```






## Combined WSD plot for alpha and beta subunits

```{r, echo=FALSE}
#combine data for subunits
WSD_alphabeta <- rbind(WSD_alpha, WSD_beta)

ggplot(data = WSD_alphabeta, aes(x=Temperature, y=WSD, group= interaction(pH, subunit), color=as.factor(pH), shape=subunit)) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2.5) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP subunits") +
  scale_shape_manual(values = c("triangle", "circle")) +
  xlab("Temperature (°C)")
```

## Combined WSD plot for beta and beta-coh subunits

```{r, echo=FALSE}
#combine data for subunits
WSD_betabetacoh <- rbind(WSD_beta, WSD_betacoh)

ggplot(data = WSD_betabetacoh, aes(x=Temperature, y=WSD, group= interaction(pH, subunit), color=as.factor(pH), shape=subunit)) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2.5) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP subunits") +
  xlab("Temperature (°C)") +
  scale_shape_manual(values = c("circle", "square")) +
  scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
```


## Combined WSD plot for alpha and beta-coh subunits
```{r, echo=FALSE}
#combine data for subunits
WSD_alphabetacoh <- rbind(WSD_alpha, WSD_betacoh)

ggplot(data = WSD_alphabetacoh, aes(x=Temperature, y=WSD, group= interaction(pH, subunit), color=as.factor(pH), shape=subunit)) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2.5) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP subunits") +
  xlab("Temperature (°C)") +
  scale_shape_manual(values = c("triangle", "square")) +
  scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
```




# same as above, with colors as subunit and shape as pH:

## Comparison of WSD for all subunits

```{r, echo=FALSE}
#combine data for subunits
WSD_alphabetabetacoh <- rbind(WSD_alpha, WSD_beta, WSD_betacoh)

ggplot(data = WSD_alphabetabetacoh, aes(x=Temperature, y=WSD, group= interaction(pH, subunit), color=subunit, shape=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2.5) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP subunits") +
  xlab("Temperature (°C)")
```






## Combined WSD plot for alpha and beta subunits

```{r, echo=FALSE}
#combine data for subunits
WSD_alphabeta <- rbind(WSD_alpha, WSD_beta)

ggplot(data = WSD_alphabeta, aes(x=Temperature, y=WSD, group= interaction(pH, subunit), color=subunit, shape=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2.5) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP subunits") +
  scale_color_manual(values = c("#f8766d", "#00ba38")) +
  xlab("Temperature (°C)")
```

## Combined WSD plot for beta and beta-coh subunits

```{r, echo=FALSE}
#combine data for subunits
WSD_betabetacoh <- rbind(WSD_beta, WSD_betacoh)

ggplot(data = WSD_betabetacoh, aes(x=Temperature, y=WSD, group= interaction(pH, subunit), color=subunit, shape=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2.5) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP subunits") +
  scale_color_manual(values = c("#00ba38", "#83b0fc")) +
  xlab("Temperature (°C)") +
  scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
```


## Combined WSD plot for alpha and beta-coh subunits
```{r, echo=FALSE}
#combine data for subunits
WSD_alphabetacoh <- rbind(WSD_alpha, WSD_betacoh)

ggplot(data = WSD_alphabetacoh, aes(x=Temperature, y=WSD, group= interaction(pH, subunit), color=subunit, shape=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2.5) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP subunits") +
  xlab("Temperature (°C)") +
  scale_color_manual(values = c("#f8766d", "#83b0fc")) +
  scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
```












## ALPHA: plot WSD and SD vs time for each pH
```{r, echo=FALSE}
ggplot(data = WSD_alpha, aes(x=Temperature, y=WSD, group= as.factor(pH), color=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP alpha subunit") +
  xlab("Temperature (°C)")

ggplot(data = WSD_alpha, aes(x=Temperature, y=SD, group= as.factor(pH), color=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Spectral Difference values of HSP alpha subunit") +
  xlab("Temperature (°C)")


ggplot(data = subset(WSD_alpha, pH==7), aes(x=Temperature, y = WSD, group= as.factor(pH), color=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, slope = 0, size = 1) + #horizontal line 
  geom_point(size = 2) +
  geom_line(size = 1) +
  theme_bw() +
  scale_color_manual(values = "#83b0fc") +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP alpha subunit") +
  xlab("Temperature (°C)") 

ggplot(data = subset(WSD_alpha, pH==7), aes(x=Temperature, y=SD, group= as.factor(pH), color=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0.0, slope = 0, size = 1) + #horizontal line 
  geom_point(size = 2) +
  geom_line(size = 1) +
  theme_bw() +
  scale_color_manual(values = "#83b0fc") +
  labs(color="pH", title = "Spectral Difference values of HSP alpha subunit") +
  xlab("Temperature (°C)")
```




## BETA: plot WSD and SD vs time for each pH
```{r, echo=FALSE}
ggplot(data = WSD_beta, aes(x=Temperature, y=WSD, group= as.factor(pH), color=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP beta subunit") +
  xlab("Temperature (°C)")

ggplot(data = WSD_beta, aes(x=Temperature, y=SD, group= as.factor(pH), color=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Spectral Difference values of HSP beta subunit") +
  xlab("Temperature (°C)")

ggplot(data = subset(WSD_beta, pH==7), aes(x=Temperature, y=WSD, group= as.factor(pH), color=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point() +
  geom_line(size = 1) +
  theme_bw() +
  scale_color_manual(values = "#83b0fc") +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP beta subunit") +
  xlab("Temperature (°C)")

ggplot(data = subset(WSD_beta, pH==7), aes(x=Temperature, y=SD, group= as.factor(pH), color=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2) +
  geom_line(size = 1) +
  theme_bw() +
  scale_color_manual(values = "#83b0fc") +
  labs(color="pH", title = "Spectral Difference values of HSP beta subunit") +
  xlab("Temperature (°C)")
```






## BETA-COH: plot WSD and SD vs time for each pH
```{r, echo=FALSE}
ggplot(data = WSD_betacoh, aes(x=Temperature, y=WSD, group= as.factor(pH), color=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP betacoh subunit") +
  xlab("Temperature (°C)")

ggplot(data = WSD_betacoh, aes(x=Temperature, y=SD, group= as.factor(pH), color=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2) +
  geom_line(size = 1) +
  theme_bw() +
  labs(color="pH", title = "Spectral Difference values of HSP betacoh subunit") +
  xlab("Temperature (°C)")

ggplot(data = subset(WSD_betacoh, pH==7), aes(x=Temperature, y=WSD, group= as.factor(pH), color=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point() +
  geom_line(size = 1) +
  theme_bw() +
  scale_color_manual(values = "#83b0fc") +
  labs(color="pH", title = "Weighted Spectral Difference values of HSP betacoh subunit") +
  xlab("Temperature (°C)")

ggplot(data = subset(WSD_betacoh, pH==7), aes(x=Temperature, y=SD, group= as.factor(pH), color=as.factor(pH))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0, size = 1) + #horizontal line 
  geom_point(size = 2) +
  geom_line(size = 1) +
  theme_bw() +
  scale_color_manual(values = "#83b0fc") +
  labs(color="pH", title = "Spectral Difference values of HSP betacoh subunit") +
  xlab("Temperature (°C)")
```





























## ALPHA: visualize raw data
```{r, echo=FALSE}

ggplot(data = aCD_all, aes(x=WL, y=MolarElipticity, group = interaction(pH, Temperature),color=as.factor(pH))) + #interaction to keep lines in right place
  geom_abline(intercept = 0) + #horizontal line 
  geom_vline(xintercept=min_wavelength, color = "red") +
  geom_vline(xintercept=max_wavelength, color = "red") +
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(color="pH", title = "Far-UV CD Spectra for HSP alpha subunit (combined)", 
       x = "Wavelength (nm)", y = "Molar Elipticity (deg * cm * cm/dmol)")


ggplot(data = aCD_pH7, aes(x=WL, y=MolarElipticity, color=as.factor(Temperature))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0) + #horizontal line 
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(color="Temperature (°C)", title = "Far-UV CD Spectra for HSP alpha subunit at pH=7",
       x = "Wavelength (nm)", y = "Molar Elipticity (deg * cm * cm/dmol)")

ggplot(data = aCD_pH4, aes(x=WL, y=MolarElipticity, color=as.factor(Temperature))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0) + #horizontal line 
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(color="Temperature (°C)", title = "Far-UV CD Spectra for HSP alpha subunit at pH=4",
       x = "Wavelength (nm)", y = "Molar Elipticity (deg * cm * cm/dmol)")

ggplot(data = aCD_pH2, aes(x=WL, y=MolarElipticity, color=as.factor(Temperature))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0) + #horizontal line 
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(color="Temperature (°C)", title = "Far-UV CD Spectra for HSP alpha subunit at pH=2", 
       x = "Wavelength (nm)", y = "Molar Elipticity (deg * cm * cm/dmol)")

# plot all of the data on a single graph:


```











## BETA: visualize raw data
```{r, echo=FALSE}
# plot all of the data on a single graph:

ggplot(data = bCD_all, aes(x=WL, y=MolarElipticity, group = interaction(pH, Temperature),color=as.factor(pH))) + #interaction to keep lines in right place
  geom_abline(intercept = 0) + #horizontal line 
  geom_vline(xintercept=min_wavelength, color = "red") +
  geom_vline(xintercept=max_wavelength, color = "red") +
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(color="pH", title = "Far-UV CD Spectra for HSP beta subunit (combined)", 
       x = "Wavelength (nm)", y = "Molar Elipticity (deg * cm * cm/dmol)")

#each individually:

ggplot(data = bCD_pH7, aes(x=WL, y=MolarElipticity, color=as.factor(Temperature))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0) + #horizontal line 
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(color="Temperature (°C)", title = "Far-UV CD Spectra for HSP beta subunit at pH=7",
       x = "Wavelength (nm)", y = "Molar Elipticity (deg * cm * cm/dmol)")

ggplot(data = bCD_pH4, aes(x=WL, y=MolarElipticity, color=as.factor(Temperature))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0) + #horizontal line 
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(color="Temperature (°C)", title = "Far-UV CD Spectra for HSP beta subunit at pH=4", 
       x = "Wavelength (nm)", y = "Molar Elipticity (deg * cm * cm/dmol)")

ggplot(data = bCD_pH2, aes(x=WL, y=MolarElipticity, color=as.factor(Temperature))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0) + #horizontal line 
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(color="Temperature (°C)", title = "Far-UV CD Spectra for HSP beta subunit at pH=2", 
       x = "Wavelength (nm)", y = "Molar Elipticity (deg * cm * cm/dmol)")


```









## BETA-COH: visualize raw data
```{r, echo=FALSE}
# plot all of the data on a single graph:

ggplot(data = bcohCD_all, aes(x=WL, y=MolarElipticity, group = interaction(pH, Temperature),color=as.factor(pH))) + #interaction to keep lines in right place
  geom_abline(intercept = 0) + #horizontal line 
  geom_vline(xintercept=min_wavelength, color = "red") +
  geom_vline(xintercept=max_wavelength, color = "red") +
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(color="pH", title = "Far-UV CD Spectra for HSP beta subunit (combined)", 
       x = "Wavelength (nm)", y = "Molar Elipticity (deg * cm * cm/dmol)")

#each individually:

ggplot(data = bcohCD_pH7, aes(x=WL, y=MolarElipticity, color=as.factor(Temperature))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0) + #horizontal line 
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(color="Temperature (°C)", title = "Far-UV CD Spectra for HSP beta subunit at pH=7",
       x = "Wavelength (nm)", y = "Molar Elipticity (deg * cm * cm/dmol)")

ggplot(data = bcohCD_pH4, aes(x=WL, y=MolarElipticity, color=as.factor(Temperature))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0) + #horizontal line 
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(color="Temperature (°C)", title = "Far-UV CD Spectra for HSP beta subunit at pH=4", 
       x = "Wavelength (nm)", y = "Molar Elipticity (deg * cm * cm/dmol)")

ggplot(data = bcohCD_pH2, aes(x=WL, y=MolarElipticity, color=as.factor(Temperature))) + #convert temp to factor so not continuous
  geom_abline(intercept = 0) + #horizontal line 
  # geom_point() +
  geom_line() +
  theme_bw() +
  labs(color="Temperature (°C)", title = "Far-UV CD Spectra for HSP beta subunit at pH=2", 
       x = "Wavelength (nm)", y = "Molar Elipticity (deg * cm * cm/dmol)")


```

